{"version":3,"sources":["Firestore.jsx","DeleteButton.jsx","VideoItem.jsx","VideosList.jsx","NewVideoForm.jsx","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","storage","getAllVideos","a","collection","get","videos","docs","map","doc","id","data","addNewVideo","title","description","file","setProgress","storageRef","ref","child","put","on","snapshot","progress","Math","round","bytesTransferred","totalBytes","error","console","log","getDownloadURL","downloadLink","add","fileUrl","deleteVideo","delete","DeleteButton","videoId","setNeedUpdating","useState","open","setOpen","setTimeout","IconButton","aria-label","onClick","Dialog","onClose","DialogContent","DialogActions","Button","autoFocus","type","VideoItem","video","expanded","setExpanded","ListItem","divider","selected","alignItems","ListItemAvatar","Avatar","style","fontWeight","window","ListItemText","disableTypography","primary","secondary","VideoList","setVideos","loading","setLoading","needUpdating","useEffect","then","history","useHistory","className","fullWidth","variant","margin","push","process","CircularProgress","length","key","NewVideoForm","setTitle","setDescription","setFile","event","preventDefault","startIcon","disabled","TextField","label","required","onChange","e","target","value","multiline","rows","InputBase","files","LinearProgress","App","path","exact","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.4127c92e.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB_xNt7pi_cH6wTCBq3AEuVtkqGLVt1xSI\",\n  authDomain: \"music-lesson-practice.firebaseapp.com\",\n  databaseURL: \"https://music-lesson-practice.firebaseio.com\",\n  projectId: \"music-lesson-practice\",\n  storageBucket: \"music-lesson-practice.appspot.com\",\n  messagingSenderId: \"874537940387\",\n  appId: \"1:874537940387:web:ccbf1eb5c3b57c5e159616\",\n  measurementId: \"G-JEPN5SV529\",\n};\n\nfirebase.initializeApp(firebaseConfig);\nconst firestore = firebase.firestore();\nconst storage = firebase.storage();\n\nasync function getAllVideos() {\n  const videos = await firestore.collection(\"videos\").get();\n  return videos.docs.map((doc) => {\n    return { id: doc.id, ...doc.data() };\n  });\n}\n\nfunction addNewVideo(title, description, file, setProgress) {\n  const storageRef = storage.ref();\n\n  const uploadTask = storageRef.child(title).put(file);\n  uploadTask.on(\n    \"state_changed\",\n    (snapshot) => {\n      const progress = Math.round(\n        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n      );\n      setProgress(progress);\n    },\n    (error) => {\n      console.log(error);\n    },\n    async () => {\n      // Upload complete\n      const downloadLink = await storageRef.child(title).getDownloadURL();\n      console.log(downloadLink);\n      await firestore.collection(\"videos\").add({\n        title,\n        description,\n        fileUrl: downloadLink,\n      });\n    }\n  );\n}\n\nasync function deleteVideo(id) {\n  // TODO: Delete video from firebase storage\n  await firestore.collection(\"videos\").doc(id).delete();\n}\n\nexport { getAllVideos, addNewVideo, deleteVideo };\n","import React, { useState } from \"react\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport {\n  IconButton,\n  Dialog,\n  DialogContent,\n  DialogActions,\n  Button,\n} from \"@material-ui/core\";\nimport { deleteVideo } from \"./Firestore\";\n\nconst DeleteButton = ({ title, videoId, setNeedUpdating }) => {\n  const [open, setOpen] = useState(false);\n\n  async function handleDelete() {\n    await deleteVideo(videoId);\n    setOpen(false);\n    setTimeout(function () {\n      setNeedUpdating(true);\n    }, 400);\n  }\n  return (\n    <>\n      <IconButton aria-label='delete' onClick={() => !open && setOpen(true)}>\n        <DeleteIcon />\n      </IconButton>\n      <Dialog open={open} onClose={() => setOpen(false)}>\n        <DialogContent>\n          Are you sure you want to delete <i>{title}</i>?<br />\n          This action cannot be undone.\n        </DialogContent>\n\n        <DialogActions>\n          <Button autoFocus onClick={() => setOpen(false)}>\n            Cancel\n          </Button>\n          <Button onClick={handleDelete} type='button'>\n            Ok\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default DeleteButton;\n","import React, { useState } from \"react\";\nimport {\n  Avatar,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  IconButton,\n} from \"@material-ui/core\";\nimport MusicNoteIcon from \"@material-ui/icons/MusicNote\";\nimport CloudDownloadIcon from \"@material-ui/icons/CloudDownload\";\nimport DeleteButton from \"./DeleteButton\";\n\nconst VideoItem = ({ video, setNeedUpdating }) => {\n  const [expanded, setExpanded] = useState(false);\n  const description = video.description\n    ? video.description\n    : \"No description available.\";\n\n  function handleClickDownload() {\n    if (video.fileUrl) {\n      window.open(video.fileUrl, \"_blank\");\n    }\n  }\n\n  return (\n    <ListItem\n      divider\n      selected={expanded ? true : false}\n      alignItems={expanded ? \"flex-start\" : \"center\"}\n    >\n      <ListItemAvatar>\n        <Avatar>\n          <MusicNoteIcon />\n        </Avatar>\n      </ListItemAvatar>\n      {expanded ? (\n        <div>\n          <p\n            style={{ fontWeight: \"bold\" }}\n            onClick={() => setExpanded(!expanded)}\n          >\n            {video.title}\n          </p>\n          <p>{description}</p>\n          <IconButton aria-label='download' onClick={handleClickDownload}>\n            <CloudDownloadIcon />\n          </IconButton>\n          <DeleteButton\n            title={video.title}\n            videoId={video.id}\n            setNeedUpdating={setNeedUpdating}\n          />\n        </div>\n      ) : (\n        <>\n          <ListItemText\n            disableTypography\n            primary={video.title}\n            secondary={expanded ? description : null}\n            onClick={() => setExpanded(!expanded)}\n          />\n          <DeleteButton\n            title={video.title}\n            videoId={video.id}\n            setNeedUpdating={setNeedUpdating}\n          />\n        </>\n      )}\n    </ListItem>\n  );\n};\n\nexport default VideoItem;\n","import React, { useEffect, useState } from \"react\";\nimport VideoItem from \"./VideoItem\";\nimport { getAllVideos } from \"./Firestore\";\nimport { Button, CircularProgress } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\n\nconst VideoList = () => {\n  const [videos, setVideos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [needUpdating, setNeedUpdating] = useState(false); // TODO: Probably a better way of doing this.\n\n  useEffect(() => {\n    getAllVideos().then((data) => {\n      setVideos(data);\n      setLoading(false);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (needUpdating) {\n      setLoading(true);\n      getAllVideos().then((data) => {\n        setVideos(data);\n        setLoading(false);\n        setNeedUpdating(false);\n      });\n    }\n  }, [needUpdating]);\n\n  const history = useHistory();\n  return (\n    <>\n      <Button\n        className='primaryButton'\n        fullWidth\n        variant='contained'\n        margin='normal'\n        onClick={() => history.push(process.env.PUBLIC_URL + \"/new\")}\n      >\n        ADD NEW VIDEO\n      </Button>\n      <h2>ALL VIDEOS</h2>\n      <p>\n        Click on one of the titles below to view description and download video.\n      </p>\n\n      {loading && <CircularProgress />}\n\n      {videos.length >= 1 &&\n        videos.map((video) => (\n          <VideoItem\n            key={video.id}\n            video={video}\n            setNeedUpdating={setNeedUpdating}\n          />\n        ))}\n\n      {!loading && videos.length === 0 && <p>Currently no videos available.</p>}\n    </>\n  );\n};\n\nexport default VideoList;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  InputBase,\n  Button,\n  TextField,\n  LinearProgress,\n} from \"@material-ui/core\";\n\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport { addNewVideo } from \"./Firestore\";\nimport { useHistory } from \"react-router-dom\";\n\nconst NewVideoForm = () => {\n  const [title, setTitle] = useState();\n  const [description, setDescription] = useState();\n  const [file, setFile] = useState([]);\n  const [progress, setProgress] = useState();\n  const history = useHistory();\n\n  useEffect(() => {\n    setTimeout(function () {\n      if (progress === 100) {\n        history.push(process.env.PUBLIC_URL + \"/\");\n      }\n    }, 1000);\n  }, [progress, history]);\n\n  async function submitForm(event) {\n    event.preventDefault();\n    addNewVideo(title, description, file, setProgress);\n  }\n  return (\n    <>\n      <Button\n        variant='text'\n        startIcon={<ArrowBackIcon />}\n        disabled={progress < 100}\n        onClick={() => history.push(process.env.PUBLIC_URL + \"/\")}\n      >\n        Back\n      </Button>\n      <h2>ADDING A NEW VIDEO</h2>\n      <p>Fill out the form below to add and upload a new video.</p>\n      {/* TODO: Form validation */}\n      <form>\n        <TextField\n          label='Title'\n          fullWidth\n          margin='normal'\n          required\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <TextField\n          label='Description'\n          multiline\n          rows={4}\n          variant='outlined'\n          fullWidth\n          margin='normal'\n          onChange={(e) => setDescription(e.target.value)}\n        />\n        {/* TODO: Only allow video files */}\n        <InputBase\n          type='file'\n          label='Video file'\n          fullWidth\n          required\n          onChange={(e) => setFile(e.target.files[0])}\n        />\n\n        <Button\n          className='primaryButton'\n          fullWidth\n          variant='contained'\n          margin='normal'\n          type='submit'\n          disabled={progress < 100}\n          onClick={submitForm}\n        >\n          Upload\n        </Button>\n        {progress && <LinearProgress variant='determinate' value={progress} />}\n      </form>\n    </>\n  );\n};\n\nexport default NewVideoForm;\n","import React from \"react\";\nimport \"./App.scss\";\nimport VideoList from \"./VideosList\";\nimport NewVideoForm from \"./NewVideoForm\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className='App'>\n        <header>\n          <h1>Al's Music Thing</h1>\n        </header>\n        <main>\n          <Switch>\n            <Route\n              path={process.env.PUBLIC_URL + \"/\"}\n              exact\n              component={VideoList}\n            />\n            <Route\n              path={process.env.PUBLIC_URL + \"/new\"}\n              component={NewVideoForm}\n            />\n          </Switch>\n        </main>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}