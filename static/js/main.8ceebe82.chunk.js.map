{"version":3,"sources":["DeleteButton.jsx","VideoItem.jsx","VideosList.jsx","NewVideoForm.jsx","App.js","serviceWorker.js","index.js"],"names":["DeleteButton","title","useState","open","setOpen","IconButton","aria-label","onClick","Dialog","onClose","DialogContent","DialogActions","Button","autoFocus","VideoItem","video","expanded","setExpanded","description","ListItem","divider","selected","alignItems","ListItemAvatar","Avatar","style","fontWeight","ListItemText","disableTypography","primary","secondary","temp","VideoList","map","NewVideoForm","variant","startIcon","TextField","label","fullWidth","margin","multiline","rows","InputBase","type","required","className","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8ceebe82.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport {\n  IconButton,\n  Dialog,\n  DialogContent,\n  DialogActions,\n  Button,\n} from \"@material-ui/core\";\n\nconst DeleteButton = ({ title }) => {\n  const [open, setOpen] = useState(false);\n  return (\n    <>\n      <IconButton aria-label='delete' onClick={() => !open && setOpen(true)}>\n        <DeleteIcon />\n      </IconButton>\n      <Dialog\n        open={open}\n        onClose={() => setOpen(false)}\n        // aria-labelledby='simple-modal-title'\n        // aria-describedby='simple-modal-description'\n      >\n        <DialogContent>\n          Are you sure you want to delete <i>{title}</i>?<br />\n          This action cannot be undone.\n        </DialogContent>\n\n        <DialogActions>\n          <Button autoFocus onClick={() => setOpen(false)}>\n            Cancel\n          </Button>\n          <Button onClick={() => setOpen(false)}>Ok</Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default DeleteButton;\n","import React, { useState } from \"react\";\nimport {\n  Avatar,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  IconButton,\n} from \"@material-ui/core\";\nimport MusicNoteIcon from \"@material-ui/icons/MusicNote\";\nimport CloudDownloadIcon from \"@material-ui/icons/CloudDownload\";\nimport DeleteButton from \"./DeleteButton\";\n\nconst VideoItem = ({ video }) => {\n  const [expanded, setExpanded] = useState(false);\n  const description = video.description\n    ? video.description\n    : \"No description available.\";\n  return (\n    <ListItem\n      divider\n      selected={expanded ? true : false}\n      alignItems={expanded ? \"flex-start\" : \"center\"}\n    >\n      <ListItemAvatar>\n        <Avatar>\n          <MusicNoteIcon />\n        </Avatar>\n      </ListItemAvatar>\n      {expanded ? (\n        <div>\n          <p\n            style={{ fontWeight: \"bold\" }}\n            onClick={() => setExpanded(!expanded)}\n          >\n            {video.title}\n          </p>\n          <p>{description}</p>\n          <IconButton aria-label='download'>\n            <CloudDownloadIcon />\n          </IconButton>\n          <DeleteButton title={video.title} />\n        </div>\n      ) : (\n        <>\n          <ListItemText\n            disableTypography\n            primary={video.title}\n            secondary={expanded ? description : null}\n            onClick={() => setExpanded(!expanded)}\n          />\n          <DeleteButton title={video.title} />\n        </>\n      )}\n    </ListItem>\n  );\n};\n\nexport default VideoItem;\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport VideoItem from \"./VideoItem\";\n\nconst temp = [\n  {\n    title: \"Jingle Bells\",\n    description:\n      \"Jingle bells, jingle bells. Jingle all the way. I'm practicing this to ready myself for Christmas.\",\n  },\n  {\n    title: \"Amazing Grace\",\n    description: \"\",\n  },\n  {\n    title: \"Cruel Summer\",\n    description: \"Probably the best song off of Taylor Swift's newest album.\",\n  },\n  {\n    title: \"All Too Well\",\n    description: \"Probably the best song of Taylor Swift, period.\",\n  },\n  {\n    title: \"Red\",\n    description:\n      \"Not really my favorite Taylor Swift song if I'm being honest.\",\n  },\n];\n\nconst VideoList = () => {\n  return (\n    <>\n      <h2>ALL VIDEOS</h2>\n      <p>\n        Click on one of the titles below to view description and download video.\n      </p>\n\n      {temp.map((video) => (\n        <VideoItem video={video} />\n      ))}\n    </>\n  );\n};\n\nexport default VideoList;\n","import React from \"react\";\nimport { InputBase, Button, TextField } from \"@material-ui/core\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\n\nconst NewVideoForm = () => (\n  <>\n    <Button variant='text' startIcon={<ArrowBackIcon />}>\n      Back\n    </Button>\n    <h2>ADDING A NEW VIDEO</h2>\n    <p>Fill out the form below to add and upload a new video.</p>\n    <form>\n      <TextField label='Title' fullWidth margin='normal' />\n      <TextField\n        label='Description'\n        multiline\n        rows={4}\n        variant='outlined'\n        fullWidth\n        margin='normal'\n      />\n      <InputBase type='file' label='Video file' fullWidth required />\n\n      <Button\n        className='primaryButton'\n        fullWidth\n        variant='contained'\n        margin='normal'\n      >\n        Upload\n      </Button>\n    </form>\n  </>\n);\n\nexport default NewVideoForm;\n","import React from \"react\";\nimport \"./App.scss\";\nimport VideoList from \"./VideosList\";\nimport { Button } from \"@material-ui/core\";\nimport NewVideoForm from \"./NewVideoForm\";\n\nfunction App() {\n  return (\n    <div className='App'>\n      <header>\n        <h1>Al's Music Thing</h1>\n      </header>\n      <main>\n        {/* On Click go to NewVideoForm  */}\n        <Button\n          className='primaryButton'\n          fullWidth\n          variant='contained'\n          margin='normal'\n        >\n          ADD NEW VIDEO\n        </Button>\n        <VideoList />\n        <NewVideoForm />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}